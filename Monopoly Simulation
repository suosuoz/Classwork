---
title: "HW 4"
author: "Matthew Matsuo"
date: ""
output: html_document
---

```{r}
gameboard <- data.frame(space = 1:40, title = c("Go" , "Mediterranean Avenue" , "Community Chest" , "Baltic Avenue" , "Income Tax" , "Reading Railroad" , "Oriental Avenue" , "Chance" , "Vermont Avenue" , "Connecticut Avenue" , "Jail" , "St. Charles Place" , "Electric Company" , "States Avenue" , "Virginia Avenue" , "Pennsylvania Railroad" , "St. James Place" , "Community Chest" , "Tennessee Avenue" , "New York Avenue" , "Free Parking" , "Kentucky Avenue" , "Chance" , "Indiana Avenue" , "Illinois Avenue" , "B & O Railroad" , "Atlantic Avenue" , "Ventnor Avenue" , "Water Works" , "Marvin Gardens" , "Go to jail" , "Pacific Avenue" , "North Carolina Avenue" , "Community Chest" , "Pennsylvania Avenue" , "Short Line Railroad" , "Chance" , "Park Place" , "Luxury Tax" , "Boardwalk"), stringsAsFactors = FALSE)
chancedeck <- data.frame(index = 1:15, card = c("Advance to Go" , "Advance to Illinois Ave." , "Advance to St. Charles Place" , "Advance token to nearest Utility" , "Advance token to the nearest Railroad" , "Take a ride on the Reading Railroad" , "Take a walk on the Boardwalk" , "Go to Jail" , "Go Back 3 Spaces" , "Bank pays you dividend of $50" , "Get out of Jail Free" , "Make general repairs on all your property" , "Pay poor tax of $15" , "You have been elected Chairman of the Board" , "Your building loan matures"), stringsAsFactors = FALSE)
communitydeck <- data.frame(index = 1:16, card = c("Advance to Go" , "Go to Jail" , "Bank error in your favor. Collect $200" , "Doctor's fees Pay $50" , "From sale of stock you get $45" , "Get Out of Jail Free" , "Grand Opera Night Opening" , "Xmas Fund matures" , "Income tax refund" , "Life insurance matures. Collect $100" , "Pay hospital fees of $100" , "Pay school tax of $150" , "Receive for services $25" , "You are assessed for street repairs" , "You have won second prize in a beauty contest" , "You inherit $100"), stringsAsFactors = FALSE)


random_dice <- function(verbose=FALSE){
  faces <- sample(1:6, 2, replace=TRUE)
  
  if(faces[1] == faces[2]){
    doubles = TRUE
  } else{
    doubles = FALSE
  }
  
  movement = sum(faces)
  if(verbose) cat("Rolled:", faces[1], faces[2], "\n")
  return(list(faces=faces, doubles=doubles, movement=movement))
}

manual_dice = setRefClass("manual_dice", 
                          fields = list(
                            rolls = "numeric",
                            pos = "numeric",
                            verbose = "logical"
                          ), 
                          methods = list(
                            roll = function() {
                              faces = rolls[pos + seq_len(2)]
                              pos <<- pos + 2
                              
                              if(faces[1] == faces[2]){
                                doubles = TRUE
                              } else{
                                doubles = FALSE
                              }
                              
                              movement = sum(faces)
                              if(verbose) cat("Rolled:", faces[1], faces[2], "\n")
                              return(list(faces=faces, doubles=doubles, movement=movement))
                            }
                          )
)

# preset_rolls is an instance of the manual_dice reference class
preset_rolls <- manual_dice$new(rolls = c(6,4, 5,3, 3,5, 6,2, 5,4, 4,1, 2,6, 4,4, 4,4, 2,2, 
                                          4,3, 4,4, 1,4, 3,4, 1,2, 3,6, 5,4, 5,5, 1,2, 5,4, 3,3, 1,1, 2,1, 1,3),
                                pos = 0, verbose = TRUE)
# preset_dice is a function that simply calls the roll() method from this preset_rolls object
preset_dice <- function() preset_rolls$roll()



player <- setRefClass("player", 
                      fields = list(
                        pos = "numeric",
                        verbose = "logical",
                        injail = "logical",
                        jailturns = "numeric",
                        roll_doubles = "numeric"
                      ), 
                      
                      methods = list(
                        doubles = function(player,tracking){
                          roll_doubles <<- 1
                          a <- 0
                          b <- 0
                          while(roll_doubles <= 3){
                            if(b == 0){
                              if(verbose) cat("Rolled Doubles. Double count is now: 1\n")
                              injail <<- FALSE
                            } else if(b == 1){
                              if(player$pos == 3 | player$pos == 18 | player$pos == 34 | player$pos == 8 | player$pos == 23 | player$pos == 37){
                                if(verbose) cat("Rolled Doubles. Double count is now: 2\n")
                                injail <<- FALSE
                              } else{
                                tracking$increase_count(pos)
                                if(verbose) cat("Rolled Doubles. Double count is now: 2\n")
                                injail <<- FALSE
                              }
                            }
                            roll <- dice()
                            if(roll$doubles == TRUE){
                              a <- a+1
                              b <- b+1
                              if(a==2){
                                if(verbose) cat("Doubles Now 3", "\n")
                                player$go_2_jail(player, tracking)
                              }
                            }
                            if(player$injail == TRUE){
                              break
                            }
                            move_fwd(roll$movement)
                            if(player$pos == 31){
                              go_2_jail(player, tracking)
                            }
                            if(player$injail == TRUE){
                              break
                            }
                            #comm chest
                            if(player$pos == 3 | player$pos == 18 | player$pos == 34){
                              ccCard <- sample(1:16,1,replace=TRUE)   
                              tracking$increase_count(player$pos)
                              if(player$verbose) cat("Drew Community Chest Card",ccCard," \n ",communitydeck[ccCard,]$card,"\n")
                              if(ccCard==1){
                                player$go_2_space_n(1)
                              }
                              if(ccCard==2){
                                player$go_2_jail(player, tracking)
                              }
                            }
                            #Chance
                            if(player$pos == 8 | player$pos == 23 | player$pos == 37){
                              chCard <- sample(1:15,1,replace=TRUE)   
                              tracking$increase_count(player$pos)
                              
                              if(player$verbose) cat("Drew Chance Card",chCard,"\n",chancedeck[chCard,]$card,"\n")
                              
                              if(chCard==1){
                                player$go_2_space_n(1)
                              }
                              if(chCard==2){
                                player$go_2_space_n(25)
                              }
                              if(chCard==3){
                                player$go_2_space_n(12)
                              }
                              if(chCard==4){
                                if(player$pos == 8 | player$pos == 37){
                                  player$go_2_space_n(13)
                                }
                                if(player$pos==23){
                                  player$go_2_space_n(29)
                                }
                              }
                              if(chCard==5){
                                if(player$pos == 8){
                                  player$go_2_space_n(16)
                                }
                                if(player$pos == 23){
                                  player$go_2_space_n(26)
                                }
                                if(player$pos == 37){
                                  player$go_2_space_n(6)
                                }
                              }
                              if(chCard==6){
                                player$go_2_space_n(6)
                              }
                              if(chCard==7){
                                player$go_2_space_n(40)
                              }
                              if(chCard==8){
                                player$go_2_jail(player, tracking)
                              }
                              if(chCard==9){
                                if(player$pos == 8){
                                  player$go_2_space_n(5)
                                }
                                if(player$pos == 23){
                                  player$go_2_space_n(20)
                                }
                                if (player$pos == 37 ) {
                                  player$go_2_space_n(34)
                                  ccCard <- sample(1:16, 1, replace = TRUE) 
                                  if(player$verbose) cat("Drew Community Chest Card",ccCard,"\n",communitydeck[ccCard,]$card,"\n")
                                  if (ccCard == 1) {
                                    player$go_2_space_n(1)
                                  }
                                  if (ccCard == 2) {
                                    player$go_2_jail(player, tracking)
                                  }
                                }
                              }
                            } 
                            if(player$injail == TRUE){
                              break
                            }
                            if(roll$doubles == FALSE){
                              if(player$pos == 8 | player$pos == 23 | player$pos == 37 | player$pos == 3 | player$pos == 18 | player$pos == 34){ 
                                break
                              }
                              tracking$increase_count(pos)
                              break
                            }
                          }
                        },
                        move_fwd = function(x) {
                          if(verbose) cat("Player at: ", pos,", ",gameboard[pos,]$title,".",sep="")
                          if(verbose) cat(" Player moves: ", x,".","\n",sep="")
                          pos <<- pos + x
                          if(pos > 40) pos <<- pos - 40
                          if(verbose) cat("Player now at: ", pos,", ",gameboard[pos,]$title,".","\n",sep="")
                        },
                        go_2_space_n = function(n){
                          if(verbose) cat("Player at: ", pos,".",sep="")
                          pos <<- n
                          if(verbose) cat(" Player now at: ", pos,".\n",sep="")
                        },
                        go_2_jail = function(player, tracking){
                          if(verbose) cat("Going to Jail","\n")
                          injail <<- TRUE
                          player$pos <- 11
                          player$jailturns <- 0
                          tracking$increase_count(player$pos)
                        }
                      )
)
player1 <- player$new(pos = 1, verbose = TRUE, injail=FALSE)
player2 <- player$new(pos = 1, verbose = TRUE, injail=FALSE)

tracking <- setRefClass("tracking",
                        fields = list(
                          tally = "numeric",
                          verbose = "logical"
                        ),
                        methods = list(
                          increase_count = function(n){
                            tally[n] <<- tally[n] + 1
                            if(verbose) cat("Tally at ",n,": ", gameboard$title[n],"\n",sep="")
                          }
                        )
)

taketurn <- function(player, tracking, roll){
  if(player$injail == TRUE){
    roll <- dice()
    player$jailturns <- player$jailturns + 1
    if(roll$doubles == TRUE){
      #if(verbose) cat("Rolled Doubles","\n","Getting Out of Jail","\n")
      player$injail <- FALSE
      player$jailturns <- 0
      player$move_fwd(roll$movement)
      tracking$increase_count(player$pos)
      if(roll$movement == 12){
        chCard <- sample(1:15,1,replace=TRUE)
        if(player$verbose) cat("Drew Chance Card",chCard,"\n",chancedeck[chCard,]$card,"\n")
        if(chCard==1){
          player$go_2_space_n(1)
          tracking$increase_count(player$pos)}
        #go to illinois
        if(chCard==2){
          player$go_2_space_n(25)
          tracking$increase_count(player$pos)}
        #go to st charles
        if(chCard==3){
          player$go_2_space_n(12)
          tracking$increase_count(player$pos)}
        #go to nearest utility
        if(chCard==4){
          if(player$pos == 8 | player$pos == 37){
            player$go_2_space_n(13)
            tracking$increase_count(player$pos)}
          if(player$pos==23){
            player$go_2_space_n(29)
            tracking$increase_count(player$pos)}
        }
        #go to nearest railroad
        if(chCard==5){
          if(player$pos == 8){
            player$go_2_space_n(16)
            tracking$increase_count(player$pos)}
          if(player$pos == 23){
            player$go_2_space_n(26)
            tracking$increase_count(player$pos)}
          if(player$pos == 37){
            player$go_2_space_n(6)
            tracking$increase_count(player$pos)}
        }
        #go to reading
        if(chCard==6){
          player$go_2_space_n(6)
          tracking$increase_count(player$pos)}
        #go to boardwalk
        if(chCard==7){
          player$go_2_space_n(40)
          tracking$increase_count(player$pos)}
        #go to jail
        if(chCard==8){
          player$go_2_jail(player, tracking)
        }
        if(chCard==9){
          if(player$pos == 8){
            player$go_2_space_n(5)
            tracking$increase_count(player$pos)
          }
          if(player$pos == 23){
            player$go_2_space_n(20)
            tracking$increase_count(player$pos)
          }
          if (player$pos == 37 ) {
            player$go_2_space_n(34)
            ccCard <- sample(1:16, 1, replace = TRUE) 
            if(player$verbose) cat("Drew Community Chest Card",ccCard,"\n",communitydeck[ccCard,]$card,"\n")
            if (ccCard == 1) {
              player$go_2_space_n(1)
              tracking$increase_count(player$pos)
            }
            #jail
            if (ccCard == 2) {
              player$go_2_jail(player, tracking)}
          }
        }
        if (chCard %in% 10:15) {
          if(player$verbose) cat(paste("Tally at", player$pos, ":", gameboard$title[player$pos], "\n",sep=""))
        }
      }
    }
    
    if(player$jailturns == 3 & player$injail == TRUE){
      #if(verbose) cat("Third Turn in Jail","\n","Getting Out of Jail","\n")
      player$injail <- FALSE
      player$jailturns <- 0
      player$move_fwd(roll$movement)
      tracking$increase_count(player$pos)
    } else if (player$injail == TRUE){
      #if(verbose) cat("Staying in Jail","\n")
      tracking$increase_count(11)
    }
  }else{
    roll <- dice()
    player$move_fwd(roll$movement)
    if(player$pos == 31){
      player$go_2_jail(player, tracking)
    }else{
      tracking$increase_count(player$pos)
      #Community Chest
      if(player$pos == 3 | player$pos == 18 | player$pos == 34){
        ccCard <- sample(1:16,1,replace=TRUE)           
        if(player$verbose) cat("Drew Community Chest Card",ccCard,"\n",communitydeck[ccCard,]$card,"\n")
        if(ccCard==1){
          player$go_2_space_n(1)
          tracking$increase_count(player$pos)}
        #JAIL
        if(ccCard==2){
          player$go_2_jail(player, tracking)
        }
      }
      #Chance
      if(player$pos == 8 | player$pos == 23 | player$pos == 37){
        chCard <- sample(1:15,1,replace=TRUE)
        if(player$verbose) cat("Drew Chance Card",chCard,"\n",chancedeck[chCard,]$card,"\n")
        if(chCard==1){
          player$go_2_space_n(1)
          tracking$increase_count(player$pos)}
        #go to illinois
        if(chCard==2){
          player$go_2_space_n(25)
          tracking$increase_count(player$pos)}
        #go to st charles
        if(chCard==3){
          player$go_2_space_n(12)
          tracking$increase_count(player$pos)}
        #go to nearest utility
        if(chCard==4){
          if(player$pos == 8 | player$pos == 37){
            player$go_2_space_n(13)
            tracking$increase_count(player$pos)}
          if(player$pos==23){
            player$go_2_space_n(29)
            tracking$increase_count(player$pos)}
        }
        #go to nearest railroad
        if(chCard==5){
          if(player$pos == 8){
            player$go_2_space_n(16)
            tracking$increase_count(player$pos)}
          if(player$pos == 23){
            player$go_2_space_n(26)
            tracking$increase_count(player$pos)}
          if(player$pos == 37){
            player$go_2_space_n(6)
            tracking$increase_count(player$pos)}
        }
        #go to reading
        if(chCard==6){
          player$go_2_space_n(6)
          tracking$increase_count(player$pos)}
        #go to boardwalk
        if(chCard==7){
          player$go_2_space_n(40)
          tracking$increase_count(player$pos)}
        #go to jail
        if(chCard==8){
          player$go_2_jail(player, tracking)
        }
        if(chCard==9){
          if(player$pos == 8){
            player$go_2_space_n(5)
            tracking$increase_count(player$pos)
          }
          if(player$pos == 23){
            player$go_2_space_n(20)
            tracking$increase_count(player$pos)
          }
          if (player$pos == 37 ) {
            player$go_2_space_n(34)
            ccCard <- sample(1:16, 1, replace = TRUE)  
            if(player$verbose) cat("Drew Community Chest Card",ccCard,"\n",communitydeck[ccCard,]$card,"\n")
            if (ccCard == 1) {
              player$go_2_space_n(1)
              tracking$increase_count(player$pos)
            }
            #jail
            if (ccCard == 2) {
              player$go_2_jail(player, tracking)
            }
          }
        }
        if (chCard %in% 10:15) {
          if(player$verbose) cat(paste("Tally at", player$pos, ":", gameboard$title[player$pos], "\n",sep=""))}
      }
      if(roll$doubles == TRUE & player$injail == FALSE){
        player$doubles(player, tracking)
      }
    }
  }
}



#issue with manual dice
#dice <- function() preset_dice()  # we alias preset_dice to dice()


#set.seed(10)
#space_tracking <- tracking$new(tally = rep(0,40), verbose = TRUE)  # new blank tracking object
#player1 <- player$new(pos = 1, verbose = TRUE, injail=FALSE)
#for(i in 1:20){ # 20 turns
#  cat("\n## Turn", i,"\n")
#  taketurn(player1, space_tracking, roll)
#}







set.seed(1)

dice <- function() random_dice(verbose = FALSE)  # we alias random_dice(verbose = FALSE) to dice()

space_tracking <- tracking$new(tally = rep(0,40), verbose = FALSE)   # new blank tracking object

start_time <- Sys.time()

for(i in 1:10000){ # simulate 10000 games
  if(i %% 100 == 0) cat("#### NEW GAME",i,"##### \n")
  player1 <- player$new(pos = 1, verbose = FALSE, injail=FALSE)  # new players for each game
  player2 <- player$new(pos = 1, verbose = FALSE, injail=FALSE)
  for(i in 1:150){ # 150 turns for each game
    if(player1$verbose) cat("Player 1 turn\n")
    taketurn(player1, space_tracking, roll)
    if(player2$verbose) cat("Player 2 turn\n")
    taketurn(player2, space_tracking, roll)
  }
}

end_time <- Sys.time()

# the results after 1000 turns. No rules have been implemented yet. Takes about 34 seconds on my computer
# after implementing all the rules, it takes about 1 min 40 seconds to run
time_dif = end_time - start_time
cat('Simulation time: ', time_dif)

results <- cbind(gameboard, tally = space_tracking$tally)
results <- cbind(results, rel = results$tally/sum(results$tally))
results_arranged <- results[order(results$tally, decreasing = TRUE), ]
print(results_arranged)
print(results)  # pretty uniform
sum(results$tally)
barplot(results$tally, names.arg = results$title, horiz = FALSE, las = 2)

```
